# Comment each AT with where it needed to be used

# CarminiteGhastguard
public net.minecraft.world.entity.monster.Ghast$GhastLookGoal

# CinderFurnaceBlockEntity
protected net.minecraft.world.level.block.entity.AbstractFurnaceBlockEntity *

# TFSkyRenderer
public net.minecraft.client.renderer.LevelRenderer skyBuffer
public net.minecraft.client.renderer.LevelRenderer darkBuffer

# TFStructureComponent
protected net.minecraft.world.level.levelgen.structure.StructurePiece rotation
protected net.minecraft.world.level.levelgen.structure.StructurePiece mirror
protected net.minecraft.world.level.levelgen.structure.StructurePiece orientation

# PlayerHelper
public net.minecraft.client.multiplayer.ClientAdvancements progress

# TFEventListener
public net.minecraft.world.entity.LivingEntity isDamageSourceBlocked(Lnet/minecraft/world/damagesource/DamageSource;)Z

# Bighorn
protected net.minecraft.world.entity.animal.Sheep getOffspringColor(Lnet/minecraft/world/entity/animal/Animal;Lnet/minecraft/world/entity/animal/Animal;)Lnet/minecraft/world/item/DyeColor;

# Entity Sizes because argh otherwise how does hydra work
public net.minecraft.world.entity.Entity dimensions

# LowerGoblinKnight and UpperGoblinKnight
public net.minecraft.world.entity.LivingEntity breakItem(Lnet/minecraft/world/item/ItemStack;)V

# Knight Phantom and Minotaur/Minoshroom
public net.minecraft.world.entity.Mob maybeDisableShield(Lnet/minecraft/world/entity/player/Player;Lnet/minecraft/world/item/ItemStack;Lnet/minecraft/world/item/ItemStack;)V

# MinoshroomModel
public net.minecraft.client.model.HumanoidModel poseRightArm(Lnet/minecraft/world/entity/LivingEntity;)V
public net.minecraft.client.model.HumanoidModel poseLeftArm(Lnet/minecraft/world/entity/LivingEntity;)V

# TFClientEvents
public net.minecraft.client.gui.Gui vignetteBrightness

# ProtectionParticle
public net.minecraft.client.particle.SuspendedTownParticle <init>(Lnet/minecraft/client/multiplayer/ClientLevel;DDDDDD)V

# GroundAttackGoal and NoClipMoveHelper
public net.minecraft.world.entity.ai.control.MoveControl operation
public net.minecraft.world.entity.ai.control.MoveControl$Operation

# GoalSelector.goals so we can remove goals
public net.minecraft.world.entity.ai.goal.GoalSelector availableGoals

# No API yet for Trunk Placers yet
public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacerType <init>(Lcom/mojang/serialization/Codec;)V

# Used in Trunk Mover Upper
public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer baseHeight
public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer heightRandA
public net.minecraft.world.level.levelgen.feature.trunkplacers.TrunkPlacer heightRandB

# Used in BlockTagGenerator
public net.minecraft.world.level.block.state.BlockBehaviour material

# Used in Parrot
public net.minecraft.world.entity.animal.Parrot MOB_SOUND_MAP

# Used in TFBlocks to allow composting
public net.minecraft.world.level.block.ComposterBlock add(FLnet/minecraft/world/level/ItemLike;)V

# Used in TFBlocks to allow blocks to set fire
public net.minecraft.world.level.block.FireBlock setFlammable(Lnet/minecraft/world/level/block/Block;II)V

# Used in TwilightForestMod to allow block stripping
public-f net.minecraft.world.item.AxeItem STRIPPABLES

# Used in ChunkGeneratorTFBase
public-f net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator

# Used in TFEventListener
public-f net.minecraft.world.entity.player.Inventory player

# used in TFMaze
public net.minecraft.world.level.levelgen.structure.StructurePiece$BlockSelector

# used in RedcapModel
public net.minecraft.client.model.HumanoidModel getAttackArm(Lnet/minecraft/world/entity/LivingEntity;)Lnet/minecraft/world/entity/HumanoidArm;

# MazeMapItem
public net.minecraft.world.level.saveddata.maps.MapItemSavedData decorations

# TFMazeMapData
public net.minecraft.world.level.saveddata.maps.MapItemSavedData <init>(IIBZZZLnet/minecraft/resources/ResourceKey;)V # ctor
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData x
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData z
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData bannerMarkers
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData frameMarkers
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData trackedDecorationCount

# TreePlacer
public net.minecraft.world.level.levelgen.feature.TreeFeature updateLeaves(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/world/level/levelgen/structure/BoundingBox;Ljava/util/Set;Ljava/util/Set;Ljava/util/Set;)Lnet/minecraft/world/phys/shapes/DiscreteVoxelShape;

# NoiseBasedChunkGenerator
public net.minecraft.world.level.levelgen.NoiseBasedChunkGenerator defaultBlock

# Spawner
public net.minecraft.world.level.BaseSpawner maxNearbyEntities
public net.minecraft.world.level.BaseSpawner spawnCount
public net.minecraft.world.level.BaseSpawner spawnRange

# TFCavesCarver
public net.minecraft.world.level.levelgen.carver.CaveCarverConfiguration floorLevel
public net.minecraft.world.level.levelgen.carver.WorldCarver isDebugEnabled(Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;)Z
public net.minecraft.world.level.levelgen.carver.WorldCarver getCarveState(Lnet/minecraft/world/level/levelgen/carver/CarvingContext;Lnet/minecraft/world/level/levelgen/carver/CarverConfiguration;Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/levelgen/Aquifer;)Lnet/minecraft/world/level/block/state/BlockState;

# Used in TargetedRotProcessor
protected net.minecraft.world.level.levelgen.structure.templatesystem.BlockRotProcessor integrity

# Used in ChestRenderer
public net.minecraft.client.resources.model.ModelBakery UNREFERENCED_TEXTURES

# Used in SpecialFlowerPotBlock
public net.minecraft.world.level.block.FlowerPotBlock isEmpty()Z

# Used in TFBlendedNoise, derivative of above
public net.minecraft.world.level.levelgen.synth.BlendedNoise mainNoise
public net.minecraft.world.level.levelgen.synth.BlendedNoise maxLimitNoise
public net.minecraft.world.level.levelgen.synth.BlendedNoise minLimitNoise
public net.minecraft.world.level.levelgen.synth.BlendedNoise xzScale
public net.minecraft.world.level.levelgen.synth.BlendedNoise yScale
public net.minecraft.world.level.levelgen.synth.BlendedNoise xzFactor
public net.minecraft.world.level.levelgen.synth.BlendedNoise yFactor

# Used in WorldUtil
public net.minecraft.server.level.ChunkMap generator()Lnet/minecraft/world/level/chunk/ChunkGenerator;

# Used in TFStructureStart
public-f net.minecraft.world.level.levelgen.structure.StructureStart

# Used for leaf and grass colors
public net.minecraft.world.level.biome.Biome TEMPERATURE_NOISE

# Used in LegacyStructureFeature
public net.minecraft.world.level.levelgen.structure.pieces.StructurePiecesBuilder pieces

# Used in TowerWingComponent
public net.minecraft.world.entity.decoration.Painting setVariant(Lnet/minecraft/core/Holder;)V

public net.minecraft.world.level.levelgen.feature.treedecorators.TreeDecorator$Context decorationSetter
public net.minecraft.world.level.chunk.ChunkGenerator getPlacementsForStructure(Lnet/minecraft/core/Holder;Lnet/minecraft/world/level/levelgen/RandomState;)Ljava/util/List;

public net.minecraft.world.level.block.DispenserBlock DISPENSER_REGISTRY

public net.minecraft.client.gui.Gui canRenderCrosshairForSpectator(Lnet/minecraft/world/phys/HitResult;)Z

# Used in TFMazeMapData (we need to unfinalize x and z so we can snap the map to the labyrinth)
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData centerX
public-f net.minecraft.world.level.saveddata.maps.MapItemSavedData centerZ

public net.minecraft.world.level.chunk.ChunkGenerator tryGenerateStructure(Lnet/minecraft/world/level/levelgen/structure/StructureSet$StructureSelectionEntry;Lnet/minecraft/world/level/StructureManager;Lnet/minecraft/core/RegistryAccess;Lnet/minecraft/world/level/levelgen/RandomState;Lnet/minecraft/world/level/levelgen/structure/templatesystem/StructureTemplateManager;JLnet/minecraft/world/level/chunk/ChunkAccess;Lnet/minecraft/world/level/ChunkPos;Lnet/minecraft/core/SectionPos;)Z

public net.minecraft.server.level.ServerLevel findLightningTargetAround(Lnet/minecraft/core/BlockPos;)Lnet/minecraft/core/BlockPos;

public net.minecraft.world.effect.MobEffectInstance amplifier

public net.minecraft.world.level.storage.loot.LootTable shuffleAndSplitItems(Lit/unimi/dsi/fastutil/objects/ObjectArrayList;ILnet/minecraft/util/RandomSource;)V

public net.minecraft.client.renderer.LevelRenderer rainSoundTime
public net.minecraft.world.level.block.entity.SignBlockEntity frontText

public net.minecraft.world.level.biome.BiomeManager biomeZoomSeed

public net.minecraft.data.models.ItemModelGenerators GENERATED_TRIM_MODELS
public net.minecraft.data.models.ItemModelGenerators$TrimModelData

public net.minecraft.world.item.crafting.ShapedRecipe$Serializer PATTERN_CODEC
public net.minecraft.world.item.crafting.ShapedRecipe$Serializer SINGLE_CHARACTER_STRING_CODEC

# ChunkBlanketingProcessors
public-f net.minecraft.world.level.chunk.ChunkStatus index
public-f net.minecraft.world.level.chunk.ChunkStatus parent
public-f net.minecraft.world.level.chunk.ChunkStatus range
public net.minecraft.world.level.chunk.ChunkStatus$GenerationTask
public net.minecraft.world.level.chunk.ChunkStatus$LoadingTask
public net.minecraft.world.level.chunk.ChunkStatus$SimpleGenerationTask

# Custom Splashes in TFClientSetup
public-f net.minecraft.client.gui.components.SplashRenderer splash
public net.minecraft.client.gui.screens.TitleScreen splash

# Display Entity behavior for FinalCastleBossGazeboComponent
public net.minecraft.world.entity.Display setBillboardConstraints(Lnet/minecraft/world/entity/Display$BillboardConstraints;)V
public net.minecraft.world.entity.Display$TextDisplay setText(Lnet/minecraft/network/chat/Component;)V
public net.minecraft.world.entity.Interaction setHeight(F)V
public net.minecraft.world.entity.Interaction setWidth(F)V
